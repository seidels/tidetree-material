round(quantile(posterior$deathRate, c(0.05, 0.5, 0.95)), digits = 3)
n = nrow(posterior)
posterior$growthRate = posterior$birthRate - posterior$deathRate
posterior$turnover = posterior$deathRate/ posterior$birthRate
# add prior distr data points
set.seed(6)
#posterior$birthPrior = rlnorm(n = n, meanlog = 0, sdlog = 0.6)
#posterior$deathPrior = rlnorm(n=n, meanlog = -2, sdlog = 1.4)
posterior$growthPrior = runif(n = n, 0, 0.1)
posterior$turnoverPrior = runif(n = n, 0, 1)
#plot
dat = melt(posterior[, c("growthPrior", "growthRate", "turnoverPrior", "turnover", "birthRate", "deathRate")])
g = ggplot(dat, aes(x=variable, y=value, fill=variable, dist="lnorm")) +
geom_violin(draw_quantiles = c(0.05, 0.95))+
scale_fill_manual(values = mycolors) +
#ylim(0,0.4)+
theme_classic() +
xlab("")+
theme(legend.position = "none")+
ylab("density")+
theme(text=element_text(size = 20, family = font),
axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.65, ))
g
#save
svg(paste0(plotDir, "phylodynamicEstimates_unsupervised.svg"), family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "phylodynamicEstimates.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
warnings
warnings()
ggsave(plot = g, filename = paste0(plotDir, "phylodynamicEstimates_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
library(ggplot2)
library(reshape2)
# plotting setup
plotDir = "../"
width = 8
height = 8
font = "Arial"
#useful functions
recovered = function(true, upper, lower){
return( (true <= upper) & (true >= lower))
}
# true tree data
load(file = "../../../Fig3/1_preprocessing/treeDat.Rdat")
dat$colony= paste0(dat$colony, ".txt")
# load inference data from setup where scarring start varies
logFile = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
log = read.delim(logFile)
# compute posterior stats for tree heights
treeHeightDat = log[, startsWith(x = colnames(log), prefix = "treeHeight")]
colonies = as.character(sapply(colnames(treeHeightDat), function(x){ strsplit(x, split = "treeHeight.t_", fixed = T)[[1]][2]}))
summaryStats = as.data.frame(t(apply(treeHeightDat, MARGIN = 2, function(x){quantile(x, c(0.05, 0.5, 0.95))})))
colnames(summaryStats) = c("HPD_lower", "median", "HPD_upper")
summaryStats$colony = colonies #paste0(colonies, ".txt")
#load(file = paste0(dir, "statistics.Rdat"))
mergedStats = merge(x = summaryStats, dat, by="colony" )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
#plot
mergedStats = mergedStats[order(mergedStats$treeHeight), ]
mergedStats$treeNumber=1:nrow(mergedStats)
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15, family =font))
#scale_x_discrete("colonies", labels  = statistics$colony_id)+
g
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.svg"),
units = unit,
dpi = 300,
width = width, height = height )
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
height = 8
# plotting setup
plotDir = "../"
width = 15
height = 8
library(ggplot2)
library(reshape2)
# plotting setup
plotDir = "../"
width = 15
height = 8
font = "Arial"
#useful functions
recovered = function(true, upper, lower){
return( (true <= upper) & (true >= lower))
}
# true tree data
load(file = "../../../Fig3/1_preprocessing/treeDat.Rdat")
dat$colony= paste0(dat$colony, ".txt")
# load inference data from setup where scarring start varies
logFile = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
log = read.delim(logFile)
# compute posterior stats for tree heights
treeHeightDat = log[, startsWith(x = colnames(log), prefix = "treeHeight")]
colonies = as.character(sapply(colnames(treeHeightDat), function(x){ strsplit(x, split = "treeHeight.t_", fixed = T)[[1]][2]}))
summaryStats = as.data.frame(t(apply(treeHeightDat, MARGIN = 2, function(x){quantile(x, c(0.05, 0.5, 0.95))})))
colnames(summaryStats) = c("HPD_lower", "median", "HPD_upper")
summaryStats$colony = colonies #paste0(colonies, ".txt")
#load(file = paste0(dir, "statistics.Rdat"))
mergedStats = merge(x = summaryStats, dat, by="colony" )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
#plot
mergedStats = mergedStats[order(mergedStats$treeHeight), ]
mergedStats$treeNumber=1:nrow(mergedStats)
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15, family =font))
#scale_x_discrete("colonies", labels  = statistics$colony_id)+
g
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
library(ggplot2)
library(reshape2)
# plotting setup
plotDir = "../"
width = 15
height = 8
font = "Arial"
#useful functions
recovered = function(true, upper, lower){
return( (true <= upper) & (true >= lower))
}
# true tree data
load(file = "../../../Fig3/1_preprocessing/treeDat.Rdat")
dat$colony= paste0(dat$colony, ".txt")
# load inference data from setup where scarring start varies
logFile = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
log = read.delim(logFile)
# compute posterior stats for tree heights
treeHeightDat = log[, startsWith(x = colnames(log), prefix = "treeHeight")]
colonies = as.character(sapply(colnames(treeHeightDat), function(x){ strsplit(x, split = "treeHeight.t_", fixed = T)[[1]][2]}))
summaryStats = as.data.frame(t(apply(treeHeightDat, MARGIN = 2, function(x){quantile(x, c(0.05, 0.5, 0.95))})))
colnames(summaryStats) = c("HPD_lower", "median", "HPD_upper")
summaryStats$colony = colonies #paste0(colonies, ".txt")
#load(file = paste0(dir, "statistics.Rdat"))
mergedStats = merge(x = summaryStats, dat, by="colony" )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
#plot
mergedStats = mergedStats[order(mergedStats$treeHeight), ]
mergedStats$treeNumber=1:nrow(mergedStats)
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15, family =font))
#scale_x_discrete("colonies", labels  = statistics$colony_id)+
g
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit, font=font
dpi = 300,
width = width, height = height )
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit, font=font,
dpi = 300,
width = width, height = height )
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15))
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
height = 12
height = 12
library(ggplot2)
library(reshape2)
# plotting setup
plotDir = "../"
width = 15
height = 12
font = "Arial"
#useful functions
recovered = function(true, upper, lower){
return( (true <= upper) & (true >= lower))
}
# true tree data
load(file = "../../../Fig3/1_preprocessing/treeDat.Rdat")
dat$colony= paste0(dat$colony, ".txt")
# load inference data from setup where scarring start varies
logFile = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
log = read.delim(logFile)
# compute posterior stats for tree heights
treeHeightDat = log[, startsWith(x = colnames(log), prefix = "treeHeight")]
colonies = as.character(sapply(colnames(treeHeightDat), function(x){ strsplit(x, split = "treeHeight.t_", fixed = T)[[1]][2]}))
summaryStats = as.data.frame(t(apply(treeHeightDat, MARGIN = 2, function(x){quantile(x, c(0.05, 0.5, 0.95))})))
colnames(summaryStats) = c("HPD_lower", "median", "HPD_upper")
summaryStats$colony = colonies #paste0(colonies, ".txt")
#load(file = paste0(dir, "statistics.Rdat"))
mergedStats = merge(x = summaryStats, dat, by="colony" )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
#plot
mergedStats = mergedStats[order(mergedStats$treeHeight), ]
mergedStats$treeNumber=1:nrow(mergedStats)
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15, family =font))
#scale_x_discrete("colonies", labels  = statistics$colony_id)+
g
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15))
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
height = 15
library(ggplot2)
library(reshape2)
# plotting setup
plotDir = "../"
width = 15
height = 15
font = "Arial"
#useful functions
recovered = function(true, upper, lower){
return( (true <= upper) & (true >= lower))
}
# true tree data
load(file = "../../../Fig3/1_preprocessing/treeDat.Rdat")
dat$colony= paste0(dat$colony, ".txt")
# load inference data from setup where scarring start varies
logFile = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
log = read.delim(logFile)
# compute posterior stats for tree heights
treeHeightDat = log[, startsWith(x = colnames(log), prefix = "treeHeight")]
colonies = as.character(sapply(colnames(treeHeightDat), function(x){ strsplit(x, split = "treeHeight.t_", fixed = T)[[1]][2]}))
summaryStats = as.data.frame(t(apply(treeHeightDat, MARGIN = 2, function(x){quantile(x, c(0.05, 0.5, 0.95))})))
colnames(summaryStats) = c("HPD_lower", "median", "HPD_upper")
summaryStats$colony = colonies #paste0(colonies, ".txt")
#load(file = paste0(dir, "statistics.Rdat"))
mergedStats = merge(x = summaryStats, dat, by="colony" )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
#plot
mergedStats = mergedStats[order(mergedStats$treeHeight), ]
mergedStats$treeNumber=1:nrow(mergedStats)
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15, family =font))
#scale_x_discrete("colonies", labels  = statistics$colony_id)+
g
svg(filename = paste0(plotDir, "treeheight_unsupervised.svg"),
width = width,
height = height, family = font)
g
dev.off()
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height | median and HPD ")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15))
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15))
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
g = ggplot(mergedStats, aes(x=treeNumber, y=median)) +
geom_point()+
geom_errorbar(aes(ymin=HPD_lower, ymax=HPD_upper), alpha=0.4) +
geom_point(aes(y=treeHeight), col="darkgreen")+
theme_minimal()+
xlab("Colony number") +
ylab("Estimated tree height")+
ylim(0,55)+
theme(axis.title = element_text(size=20), text = element_text(size = 15))
ggsave(plot = g, filename = paste0(plotDir, "treeheight_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
# coverage
rec = recovered(true = mergedStats$treeHeight, lower=mergedStats$HPD_lower, upper = mergedStats$HPD_upper)
coverage = round(sum(rec)/length(rec), digits =2)
coverage
# coverage with hour resolution
rec = recovered(true = mergedStats$treeHeight,
lower = round(mergedStats$HPD_lower, digits = 0),
upper = round(mergedStats$HPD_upper, digits = 0))
coverage = round(sum(rec)/length(rec), digits =2)
coverage
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(wesanderson)
# plot config
plotDir = "../"
mycolors = rep(wes_palette(n=4, name="GrandBudapest1")[c(1,2,4)], each=2)
width = 15
height = 15
unit = "cm"
font = "Arial"
#load posterior
logF = "../../../Fig3/2_inference/inference_logs/unsupervised/all_trees_rho_origin_dreamChallengeRange.combined.log"
posterior = read.delim(file = paste0(logF), header = T)
print("report posterior median and 95% HPD interval for the birth rate:")
round(quantile(posterior$birthRate, c(0.05, 0.5, 0.95)), digits = 3)
print("report posterior median and 95% HPD interval for the death rate:")
round(quantile(posterior$deathRate, c(0.05, 0.5, 0.95)), digits = 3)
n = nrow(posterior)
posterior$growthRate = posterior$birthRate - posterior$deathRate
posterior$turnover = posterior$deathRate/ posterior$birthRate
# add prior distr data points
set.seed(6)
#posterior$birthPrior = rlnorm(n = n, meanlog = 0, sdlog = 0.6)
#posterior$deathPrior = rlnorm(n=n, meanlog = -2, sdlog = 1.4)
posterior$growthPrior = runif(n = n, 0, 0.1)
posterior$turnoverPrior = runif(n = n, 0, 1)
#plot
dat = melt(posterior[, c("growthPrior", "growthRate", "turnoverPrior", "turnover", "birthRate", "deathRate")])
g = ggplot(dat, aes(x=variable, y=value, fill=variable, dist="lnorm")) +
geom_violin(draw_quantiles = c(0.05, 0.95))+
scale_fill_manual(values = mycolors) +
#ylim(0,0.4)+
theme_classic() +
xlab("")+
theme(legend.position = "none")+
ylab("density")+
theme(text=element_text(size = 20, family = font),
axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.65, ))
g
#save
svg(paste0(plotDir, "phylodynamicEstimates_unsupervised.svg"), family = font)
g
dev.off()
ggsave(plot = g, filename = paste0(plotDir, "phylodynamicEstimates_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
g = ggplot(dat, aes(x=variable, y=value, fill=variable, dist="lnorm")) +
geom_violin(draw_quantiles = c(0.05, 0.95))+
scale_fill_manual(values = mycolors) +
#ylim(0,0.4)+
theme_classic() +
xlab("")+
theme(legend.position = "none")+
ylab("density")+
theme(text=element_text(size = 20,),
axis.text.x = element_text(angle = 45, vjust = 0.7, hjust = 0.65, ))
ggsave(plot = g, filename = paste0(plotDir, "phylodynamicEstimates_unsupervised.pdf"),
units = unit,
dpi = 300,
width = width, height = height )
print("report posterior median and 95% HPD interval for the birth rate:")
round(quantile(posterior$birthRate, c(0.05, 0.5, 0.95)), digits = 3)
print("report posterior median and 95% HPD interval for the death rate:")
round(quantile(posterior$deathRate, c(0.05, 0.5, 0.95)), digits = 3)
1/0.091
0.09 * 54
0.077*54
0.092*54
0.09 - 0.06
0.077 - 0.026
0.092 - 0.06
0.09*54
0.092 - 0.077
0.06 - 0.026
0.87 - 0.067
0.087 - 0.067
0.11 - 0.081
0.076 - 0.046
0.055 - 0.041
